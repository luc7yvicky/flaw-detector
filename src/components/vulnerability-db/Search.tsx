"use client";

import { useState } from "react";
import { Input } from "../ui/Input";
import { IconMagnifierWithPlus } from "../ui/Icons";
import VulDBImageCardContainer from "./VulDBImageCardContainer";
import VulDBDashboard from "./VulDBDashboard";

export function Search({
  initialPosts,
  setFilteredPosts,
}: {
  initialPosts: any;
  setFilteredPosts: (posts: any) => void;
}) {
  const [searchTerm, setSearchTerm] = useState("");
  const [filteredPosts, setLocalFilteredPosts] = useState(initialPosts);

  const handleSearch = async () => {
    try {
      const response = await fetch("/api/search", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ searchTerm }),
      });

      if (!response.ok) {
        throw new Error("검색 오류 발생");
      }

      const { posts } = await response.json();
      setLocalFilteredPosts(posts); // 로컬 상태 업데이트
      setFilteredPosts(posts); // 부모 컴포넌트의 상태도 업데이트
    } catch (error) {
      console.error("검색 오류 발생:", error);
    }
  };

  return (
    <div className="flex flex-col gap-4">
      <div className="flex items-center gap-2">
        <Input
          className="border-primary-500"
          value={searchTerm}
          onChange={(e) => setSearchTerm(e.target.value)}
          placeholder="검색어를 입력하세요"
        />
        <IconMagnifierWithPlus onClick={handleSearch} />
      </div>
      {/* 검색된 게시글을 보여주는 부분 */}
      <VulDBImageCardContainer posts={filteredPosts.slice(0, 3)} />
      <VulDBDashboard posts={filteredPosts} />
    </div>
  );
}
